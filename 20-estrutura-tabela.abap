*&---------------------------------------------------------------------*
*& Report ZTREINO08
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZTREINO08.
* DeclaraÁ„o de tipos
TYPES: BEGIN OF TY_MATERIAL,
 CODMAT(10) TYPE C,
 DESCRI(35) TYPE C,
END OF TY_MATERIAL.
* DeclaraÁ„o de estrutura (Vork area)
* 1∞ Maneira
DATA W_MATERIAL TYPE TY_MATERIAL.
DATA: BEGIN OF W_CLIENTE,
 CODCLI(10) TYPE C,
 NOME(35) TYPE C,
END OF W_CLIENTE.
* DeclaraÁ„o de tabela interna
* Declarando duas tabelas, porÈm de maneiras diferentes
DATA T_MATERIAL TYPE TABLE OF TY_MATERIAL.
DATA: BEGIN OF T_FORNEC OCCURS 0,
 CODFOR(10) TYPE C,
 NOME(35) TYPE C,
END OF T_FORNEC.
* Inserindo registros na tabela interna (APPEND)
* Exemplo APPEND com header line
T_FORNEC-CODFOR = 'FORN-0001'.
T_FORNEC-NOME = 'APPLE'.
APPEND T_FORNEC.
CLEAR T_FORNEC.
T_FORNEC-CODFOR = 'FORN-0002'.
T_FORNEC-NOME = 'SAMSUNG'.
APPEND T_FORNEC.
* Exemplo APPEND com header line
W_MATERIAL-CODMAT = 'MAT-0001'.
W_MATERIAL-DESCRI = 'Iphone 6'.
APPEND W_MATERIAL TO T_MATERIAL.
CLEAR W_MATERIAL.
W_MATERIAL-CODMAT = 'MAT-0002'.
W_MATERIAL-DESCRI = 'Galaxy 6'.
APPEND W_MATERIAL TO T_MATERIAL.
* Comando LOOP
* LOOP tabela interna com HEADER LINE
LOOP AT T_FORNEC WHERE CODFOR = 'FORN-0001'.
 WRITE:/ T_FORNEC-CODFOR, T_FORNEC-NOME, 'LOOP'.
ENDLOOP.
ULINE.
* LOOP tabela interna SEM HEADER LINE
LOOP AT T_MATERIAL INTO W_MATERIAL.
 WRITE:/ W_MATERIAL-CODMAT, W_MATERIAL-DESCRI, 'LOOP'.
ENDLOOP.
ULINE.
* Comando READ TABLE
READ TABLE T_FORNEC INDEX 2.
IF SY-SUBRC = 0.
 WRITE:/ T_FORNEC-CODFOR, T_FORNEC-NOME, 'READ'.
ENDIF.
ULINE.
* Comando MODIFY
LOOP AT T_MATERIAL INTO W_MATERIAL.
 CONCATENATE W_MATERIAL-DESCRI 'BRANCO' INTO W_MATERIAL-DESCRI SEPARATED BY SPACE.
 MODIFY T_MATERIAL FROM W_MATERIAL TRANSPORTING DESCRI.
ENDLOOP.
LOOP AT T_MATERIAL INTO W_MATERIAL.
 WRITE:/ W_MATERIAL-CODMAT, W_MATERIAL-DESCRI, 'MODIFY'.
ENDLOOP.
